This is the Readme file for NSGA-II code.


About the Algorithm
--------------------------------------------------------------------------
NSGA-II: Non-dominated Sorting Genetic Algorithm - II

Please refer to the following paper for details about the algorithm:

Authors: Dr. Kalyanmoy Deb, Sameer Agrawal, Amrit Pratap, T Meyarivan
Paper Title: A Fast and Elitist multi-objective Genetic Algorithm: NSGA-II
Journal: IEEE Transactions on Evolutionary Computation (IEEE-TEC)
Year: 2002
Volume: 6
Number: 2
Pages: 182-197
---------------------------------------------------------------------------


---------------------------------------------------------------------------
NOTE: This archive contains routines for ploting the objective data realtime
using gnuplot. The code has been written for posix compliant operating systems
and uses standard piping method provided by GNU C library. The routines should
work on any unix and unix like OS having gnuplot installed and which are posix
compliant.
该档案库包含使用gnuplot实时绘制目标数据的例程。 该代码是为posix兼容的操作系统编写的，并使用GNU C库提供的标准管道方法。 该例程应在任何装有gnuplot且符合posix的unix和unix上运行，例如OS
---------------------------------------------------------------------------


How to compile and run the program
---------------------------------------------------------------------------
Makefile has been provided for compiling the program on linux (and unix-like)
systems. Edit the Makefile to suit your need. By default, provided Makefile
attempts to compile and link all the existing source files into one single
executable.
提供了Makefile，用于在Linux（和类似Unix的）系统上编译程序。 编辑Makefile以适合您的需要。 默认情况下，提供的Makefile尝试将所有现有的源文件编译并链接到一个可执行文件中。

Name of the executable produced is: nsga2r
生成的可执行文件的名称为：nsga2r

To run the program type: ./nsga2r random_seed
Here random_seed is a real number in (0,1) which is used as a seed for random
number generator.
You can also store all the input data in a text file and use a redirection
operator to give the inputs to the program in a convenient way.
You may use the following syntax: ./nsga2r random_seed <inp_file.in, where
"inp_file.in" is the file that stores all the input parameters
要运行程序，请输入：./nsga2r random_seed
这里random_seed是（0,1）中的实数，用作随机数生成器的种子。
您还可以将所有输入数据存储在文本文件中，并使用重定向运算符以方便的方式将输入提供给程序。
您可以使用以下语法：./nsga2r random_seed <inp_file.in，其中“ inp_file.in”是存储所有输入参数的文件
---------------------------------------------------------------------------


About the output files
---------------------------------------------------------------------------
initial_pop.out: This file contains all the information about initial population.该文件包含有关初始填充的所有信息。
final_pop.out: This file contains the data of final population.该文件包含最终种群数据。
all_pop.out: This file containts the data of populations at all generations.该文件包含所有世代的种群数据。
best_pop.out: This file contains the best solutions obtained at the end of simulation run.该文件包含在模拟运行结束时获得的最佳解决方案。
params.out: This file contains the information about input parameters as read by the program.该文件包含有关程序读取的输入参数的信息。
---------------------------------------------------------------------------


About the input parameters
---------------------------------------------------------------------------
popsize: This variable stores the population size (a multiple of 4) 此变量存储种群规模（4的倍数）
ngen: Number of generations 世代数
nobj: Number of objectives 目标数量
ncon: Number of constraints 约束数量
nreal: Number of real variables 实变数
min_realvar[i]: minimum value of i^{th} real variable i^{th}实变量的最小值
max_realvar[i]: maximum value of i^{th} real variable i^{th}实变量的最大值
pcross_real: probability of crossover of real variable 实变量交叉的概率
pmut_real: probability of mutation of real variable 实变量突变的可能性
eta_c: distribution index for real variable SBX crossover 实变量SBX交叉的分布指数
eta_m: distribution index for real variable polynomial mutation 实变量多项式变异的分布指数
nbin: number of binary variables 二进制变量数
nbits[i]: number of bits for i^{th} binary variable 第i个二进制变量的位数
min_binvar[i]: minimum value of i^{th} binary variable i^{th}二进制变量的最小值
max_binvar[i]: maximum value of i^{th} binary variable i^{th}二进制变量的最大值
pcross_bin: probability of crossover for binary variable 二元变量交叉的概率
pmut_bin: probability of mutation for binary variable 二元变量的突变概率
choice: option to display the data realtime using gnuplot 选项使用gnuplot实时显示数据 
obj1, obj2, obj3: index of objectives to be shown on x, y and z axes respectively 分别在x，y和z轴上显示的物镜索引
angle1, angle2: polar and azimuthal angle required for location of eye 眼睛位置所需的极角和方位角
---------------------------------------------------------------------------


Defining the Test Problem
---------------------------------------------------------------------------
Edit the source file problemdef.c to define your test problem. Some sample
problems (24 test problems from Dr. Deb's book - Multi-Objective Optimization
using Evolutionary Algorithms) have been provided as examples to guide you
define your own objective and constraint functions. You can also link other
source files with the code depending on your need.
Following points are to be kept in mind while writing objective and constraint
functions.
1. The code has been written for minimization of objectives (min f_i). If you want to
maximize a function, you may use negetive of the function value as the objective value.
2. A solution is said to be feasible if it does not violate any of the constraints.
Constraint functions should evaluate to a quantity greater than or equal to zero
(g_j >= 0), if the solution has to be feasible. A negetive value of constraint means,
it is being violated.
3. If there are more than one constraints, it is advisable (though not mandatory)
to normalize the constraint values by either reformulating them or dividing them
by a positive non-zero constant.
编辑源文件problemdef.c以定义您的测试问题。提供了一些示例问题（来自Deb博士的书的24个测试问题-使用进化算法的多目标优化）作为示例来指导您定义自己的目标和约束函数。您还可以根据需要将其他源文件与代码链接。
在编写目标函数和约束函数时，请牢记以下几点。
1.编写该代码是为了最大程度地减少目标（min f_i）。如果要最大化功能，则可以将函数值的取整用作目标值。
2.如果不违反任何约束条件，则认为该解决方案是可行的。如果解决方案必须可行，则约束函数的值应大于或等于零（g_j> = 0）。约束的可取值意味着它已被违反。
3.如果有多个约束，建议（尽管不是强制性的）通过重新定义约束值或将它们除以正的非零常数来规范化约束值。
---------------------------------------------------------------------------


About the files
---------------------------------------------------------------------------
global.h: Header file containing declaration of global variables and functions 包含全局变量和函数声明的头文件
rand.h: Header file containing declaration of variables and functions for random 
number generator 包含用于随机数生成器的变量和函数的声明的头文件
allocate.c: Memory allocation and deallocation routines 内存分配和释放例程
auxiliary.c: auxiliary routines (not part of the algorithm) 辅助例程（不是算法的一部分）
crossover.c: Routines for real and binary crossover 实数和二进制交叉的例程
crowddist.c: Crowding distance assignment routines 拥挤距离分配例程
decode.c: Routine to decode binary variables 解码二进制变量的例程
display.c: Routine to display the data realtime using gnuplot 使用gnuplot实时显示数据的例程
dominance.c: Routine to perofrm non-domination checking 例行非支配检查
eval.c: Routine to evaluate constraint violation 评估约束违例的例程
fillnds.c: Non-dominated sorting based selection 非主导的基于排序的选择
initialize.c: Routine to perform random initialization to population members 对种群成员执行随机初始化的例程
list.c: A custom doubly linked list implementation 自定义双链表实现
merge.c: Routine to merge two population into one larger population 将两个种群合并为一个较大种群的例程
mutation.c: Routines for real and binary mutation 实数和二进制突变的例程
nsga2r.c: Implementation of main function and the NSGA-II framework 主要功能和NSGA-II框架的实现
problemdef.c: Test problem definitions 测试问题定义
rand.c: Random number generator related routines 随机数生成器相关的例程
rank.c: Rank assignment routines 等级分配程序
report.c: Routine to write the population information in a file 将种群信息写入文件的例程
sort.c: Randomized quick sort implementation 随机快速排序实施
tourselect.c: Tournament selection routine 选择程序
---------------------------------------------------------------------------

Please feel free to send questions/comments/doubts/suggestions/bugs
etc. to deb@iitk.ac.in

Dr. Kalyanmoy Deb
14th June 2005
http://www.iitk.ac.in/kangal/
---------------------------------------------------------------------------
